% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{huberReg}
\alias{huberReg}
\title{Tuning-free Huber regression}
\usage{
huberReg(X, Y, epsilon = 1e-05, constTau = 1.345, iteMax = 500L)
}
\arguments{
\item{X}{An \eqn{n} by \eqn{d} design matrix with each row being a sample and each column being a variable and \eqn{d < n}.}

\item{Y}{A continuous response vector with length \eqn{n}.}

\item{epsilon}{The tolerance level for the iterative weighted least square, the iteration will stop when \eqn{||\theta_new - \theta_old||_inf < \epsilon} or \eqn{|\tau_new - \tau_old| < \epsilon}. The defalut value is 1e-5.}

\item{constTau}{The constant term used to update \eqn{\tau} in the tuning-free procedure. In each round of iteration, \eqn{\tau} is updated to be \code{constTau} \eqn{* \sigma_MAD}, where \eqn{\sigma_MAD = median(|R - median(R)|) / \Phi^(-1)(3/4)} is the median absolute deviation estimator, and \eqn{R} is the residual from last round of iteration. The defalut value is 1.345.}

\item{iteMax}{The maximal number of iteration in iterative weighted least square, the iteration stops if this number is reached. The defalut value is 500.}
}
\value{
A list including the following terms will be returned:
\itemize{
\item \code{theta} The estimated \eqn{\theta}, a vector with length \eqn{d + 1}, with the first one being the value of intercept.
\item \code{tauCoef} The robustness parameter \eqn{\tau} determined by the tuning-free principle to estimate coefficients except for the intercept.
\item \code{tauItcp} The robustness parameter \eqn{\tau} determined by the tuning-free principle to estimate the intercept.
\item \code{iteCoef} The number of iterations in the iterative least square procedure.
\item \code{iteItcp} The number of iterations to estimate the intercept.
}
}
\description{
The function fits adaptive Huber regression via iterative weighted least square, with \eqn{\tau} determined by a tuning-free principle and the intercept term \eqn{\beta_0} estimated via a two-step procedure.
}
\details{
The observed data are \eqn{(Y, X)}, where \eqn{Y} is an \eqn{n}-dimensional response vector and \eqn{X} is an \eqn{n} by \eqn{d} design matrix with \eqn{d < n}. We assume that \eqn{Y} depends on \eqn{X} through a linear model \eqn{Y = X \beta + \epsilon}, where \eqn{\epsilon} is an \eqn{n}-dimensional noise vector whose distribution can be asymmetrix and/or heavy-tailed. All the arguments except for \eqn{X} and \eqn{Y} have default settings.
}
\examples{
n = 500
d = 5
thetaStar = rep(3, d + 1)
X = matrix(rnorm(n * d), n, d)
error = rlnorm(n, 0, 1.5) - exp(1.5^2 / 2)
Y = as.numeric(cbind(rep(1, n), X) \%*\% thetaStar + error)
listHuber = huberReg(X, Y)
thetaHuber = listHuber$theta
}
\references{
Wang, L., Zheng, C., Zhou, W. and Zhou, W.-X. (2018). A New Principle for Tuning-Free Huber Regression. Preprint.
}
\seealso{
\code{\link{cvHuberLasso}}
}
\author{
Xiaoou Pan, Wen-Xin Zhou
}
